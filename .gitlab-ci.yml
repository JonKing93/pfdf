stages:
  - build
  - test
  - tutorials
  - deploy

default:
  tags:
    - us-west-2

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

#####
# Python Versions
#####

# Latest python release
variables:
  LATEST: '12'

# Activates latest python build for non-parallel jobs
.latest-python:
  image: "python:3.$LATEST"
  before_script:
    - source venv-$LATEST/bin/activate

# Run a job on multiple versions of python in parallel
.multiple-python-versions:
  parallel:
    matrix:
      - VERSION: ['11', '12']
  image: "python:3.$VERSION"

#####
# Build
#####

build:
  stage: build
  extends: .multiple-python-versions
  before_script:
    # Forces daily build to install from the latest repositories
    - if [ "$CI_PIPELINE_SOURCE" == "schedule" ]; then rm poetry.lock; fi
  script:
    - pip install virtualenv
    - virtualenv "venv-$VERSION"
    - source "venv-$VERSION/bin/activate"
    - pip install poetry
    - poetry install --with dev --extras tutorials
  artifacts:
    expire_in: 1 hour
    paths:
      - "venv-$VERSION"

#####
# Test: Safety, Formatting, Tests
#####

safety:
  stage: test
  extends: .latest-python
  script:
    - poe safety

format:
  stage: test
  extends: .latest-python
  script:
    - poe lint

test:
  stage: test
  extends: .multiple-python-versions
  script:
    - source "venv-$VERSION/bin/activate"
    - poe tests
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    expire_in: 1 hour
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

webtest:
  stage: test
  extends: .latest-python
  rules:
    - if: $CI_COMMIT_BRANCH
      when: manual
  script:
    - poe webtest

#####
# Tutorials
#####

check-tutorials:
  stage: tutorials
  extends: .latest-python
  script:
    - poe lint-tutorials

run-tutorials:
  stage: tutorials
  rules:
    - if: $CI_COMMIT_BRANCH
      when: manual
  extends: .latest-python
  script:
    - poe refresh-tutorials

#####
# Deploy: Packaging and sphinx docs
#####

pages:
  stage: deploy
  extends: .latest-python
  when: manual
  script:
    - poe docs-all
  artifacts:
    paths:
    - public

release:
  stage: deploy
  extends: .latest-python
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - poetry build
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
