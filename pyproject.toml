[build-system]
requires = ["poetry-core>=1.5.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "pfdf"
version = "3.0.0a1"
description = "A package to facilitate post-wildfire debris-flow hazard assessments and research"
authors = [
    "Jonathan King <jking@usgs.gov>",
    "Dennis Staley <dstaley@usgs.gov>"
]
readme = "README.md"
license = "GPL-3.0-only"
repository = "https://code.usgs.gov/ghsc/lhp/pfdf"
keywords = ["wildfire", "debris flow", "hazard", "usgs"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering"
]
packages = [
    { include = "pfdf" },
]

[tool.poetry.dependencies]
# Core dependencies
python = ">=3.11, <3.13"
numpy = "<2"
pysheds = "0.3.5"
rasterio = "*"
affine = "*"
shapely = "*"
fiona = "*"

# Tutorial plots
cartopy = { version = ">=0.22", optional = true }
matplotlib = { version = ">=3.8.2", optional = true }

[tool.poetry.extras]
tutorials = ["cartopy", "matplotlib"]

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
# Code
poethepoet = "*"
safety = "3.2.7"
black = ">=24.3.0"
isort = "^5.12.0"
pytest = "^7.3.1"
pytest-cov = "*"
coverage = "*"
twine = "*"

# Docs
sphinx = ">=7.2.6"
sphinx-rtd-theme = ">=1.3.0"
sphinx_design = ">=0.5"
sphinx-copybutton = "*"

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning:pysheds.sgrid",
    "ignore::DeprecationWarning:pysheds.sview",
    "ignore::DeprecationWarning:numba.core.typing.context",
    "ignore::DeprecationWarning:pyproj.transformer",
]
markers = [
    "slow: marks tests as slow (deselect with: -m \"not slow\")",
]

[tool.coverage.report]
exclude_lines = [
    "if typing.TYPE_CHECKING",
]
omit = [
    "pfdf/typing/*",
    "pfdf/raster/_features/typing.py",
]

[tool.isort]
profile = "black"

#####
# Developer scripts
#####

[tool.poe.tasks.safety]
help = "Checks package dependencies for security issues"
cmd = "safety check"

[tool.poe.tasks.tests]
help = "Runs the tests and requires 100% coverage"
sequence = [
  { cmd = "pytest tests --cov=pfdf --cov=tests --cov-fail-under=100 --cov-report xml:coverage.xml" },
  { ref = "coverage" },
]

[tool.poe.tasks.quicktest]
help = "Runs the tests, but skips any slow tests"
cmd = "pytest tests -m \"not slow\""

[tool.poe.tasks.coverage]
help = "Prints the coverage report for the tests"
cmd = "coverage report"

[tool.poe.tasks._rmtree]
help = "Deletes a folder and its contents"
expr = "shutil.rmtree(sys.argv[1]) if pathlib.Path(sys.argv[1]).exists() else None"
imports = ["shutil", "pathlib"]

[tool.poe.tasks._open]
help = "Opens an HTML index page in a browser"
expr = "webbrowser.open(pathlib.Path.cwd() / sys.argv[1] / 'index.html')"
imports = ["webbrowser", "pathlib"]

[tool.poe.tasks.htmlcov]
help = "Builds an HTML coverage report and opens in browser"
sequence = [
  { ref = "_rmtree htmlcov" },
  { cmd = "coverage html --skip-covered" },
  { ref = "_open htmlcov" },
]

[tool.poe.tasks.format]
help = "Applies black and isort to pfdf and its tests"
sequence = ["isort pfdf", "isort tests", "black pfdf", "black tests"]
default_item_type = "cmd"

[tool.poe.tasks.lint]
help = "Requires pfdf and its tests to be properly formatted"
sequence = [
  "isort pfdf --check", 
  "isort tests --check", 
  "black pfdf --check", 
  "black tests --check",
]
default_item_type = "cmd"

[tool.poe.tasks.pipeline]
help = "Mimics the Gitlab pipeline. Runs safety check, tests, and lint"
sequence = ["safety", "lint", "tests"]

[tool.poe.tasks.docs]
help = "Deletes and then rebuilds the documentation"
sequence = [
  { ref = "_rmtree public" },
  { cmd = "sphinx-build -qa docs public" },
]

[tool.poe.tasks.open-docs]
help = "Opens the docs in a webbrowser"
ref = "_open public"

[tool.poe.tasks.download-tutorials]
help = "Downloads data for the tutorials"
script = "scripts.docs:download_tutorials"

[tool.poe.tasks.figures]
help = "Builds the figures for the tutorials"
script = "scripts.docs:figures"

[tool.poe.tasks.docs-pipeline]
help = "Downloads tutorial data, creates figures, and rebuilds the docs"
sequence = ["download-tutorials", "figures", "docs"]
