Gartner 2014 Models
===================

The ``gartner2014`` (or ``g14``) module provides two functions that implement the potential sediment volume models of `Gartner et al., 2014 <https://doi.org/10.1016/j.enggeo.2014.04.008>`_. In brief, these are a long-term and emergency assessment model.

Emergency Assessment Model
--------------------------

This model is given by:

.. math::

    lnV = 4.22 + 0.39\ \mathrm{sqrt}(i15) + 0.36\ \mathrm{ln}(Bmh) + 0.13\ \mathrm{sqrt}(R)

.. math::

    V = \mathrm{exp}(lnV)

.. math::

    \mathrm{95\%} \ \mathrm{CI} = \mathrm{exp}[lnV ± (1.96 \times 1.04)]

where:

.. list-table::

    * - **Variable**
      - **Description**
      - **Units**
    * - V
      - Potential sediment volume
      - meters^3
    * - lnV
      - Natural log of potential sediment volume
      -
    * - i15
      - Peak 15-minute rainfall intensity
      - mm/hour
    * - Bmh
      - Catchment area burned at moderate or high intensity
      - km^2
    * - R
      - Watershed relief
      - meters
    * - 1.96
      - Normal distribution percentile multiplier for 95% confidence interval
      -
    * - 1.04
      - Residual standard error of the model
      -


You can run this model using the ``emergency`` function. This function returns the estimated potential sediment volumes (V), the lower bound of the 95% confidence interval (Vmin), and the upper bound of the 95% confidence interval (Vmax). For example, assuming you have already built a stream segment network::

    >>> from pfdf.models import g14
    >>> from pfdf import severity, watershed

    # Compute model inputs
    >>> i15 = 0.24
    >>> moderate_high = severity.mask(barc4, ["moderate","high"])
    >>> Bmh = segments.burned_area(moderate_high)
    >>> relief = watershed.relief(dem, flow)
    >>> R = segments.relief(relief)

    # Estimate debris-flow volume
    >>> V, Vmin, Vmax = g14.emergency(i15, Bmh, R)

You can also use the "Ci", "Cb", "Cr", and "B" options to change the values of the model coefficients and intercept::

    # Estimate volume using custom parameters
    >>> V, Vmin, Vmax = g14.emergency(i15, Bmh, R, B=4.23, Ci=0.38, Cb=0.35, Cr=0.12)

And the "CI" and "RSE" options to calculate custom confidence intervals::

    # Estimate the 90% CI using a custom RSE
    >>> V, Vmin, Vmax = g14.emergency(i15, Bmh, R, CI=0.9, RSE=1.13)


Long-term Model
---------------
This model is given by:

.. math::

    lnV = 6.07 + 0.71\ \mathrm{ln}(i60) + 0.22\ \mathrm{ln}(B_t) - 0.24\ \mathrm{ln}(T) + 0.49\ \mathrm{ln}(A) + 0.03\ \mathrm{sqrt}(R)

.. math::

    V = \mathrm{exp}(lnV)

.. math::

    \mathrm{95\%} \ \mathrm{CI} = \mathrm{exp}[lnV ± (1.96 \times 1.25)]



where:

.. list-table::

    * - **Variable**
      - **Description**
      - **Units**
    * - V
      - Potential sediment volume
      - meters^3
    * - lnV
      - Natural log of potential sediment volume
      -
    * - i60
      - Peak 60-minute rainfall intensity
      - mm/hour
    * - Bt
      - Total burned catchment area
      - km^2
    * - T
      - Time elapsed since fire
      - years
    * - A
      - Total catchment area
      - km^2
    * - R
      - Watershed relief
      - meters
    * - 1.96
      - Normal distribution percentile multiplier for 95% confidence interval
      -
    * - 1.25
      - Residual standard error of the model
      -


You can run this model using the ``longterm`` function. This function returns the estimated potential sediment volumes (V), the lower bound of the 95% confidence interval (Vmin), and the upper bound of the 95% confidence interval (Vmax). For example, assuming you have already built a stream segment network::

    >>> from pfdf.models import g14
    >>> from pfdf import severity

    # Compute model inputs
    >>> i60 = 0.96
    >>> burned = severity.mask(barc4, "burned")
    >>> Bt = segments.burned_area(burned)
    >>> T = 2
    >>> A = segments.area()
    >>> R = segments.relief(relief)

    # Estimate debris-flow volume
    >>> V, Vmin, Vmax = g14.longterm(i60, Bt, T, A, R)

You can also use the "Ci", "Cb", "Ct", "Ca", "Cr", and "B" options to change the values of the model coefficients and intercept::

    # Estimate volume using custom parameters
    >>> V, Vmin, Vmax = g14.longterm(i60, Bt, T, A, R, B=6.08, Ci=0.72, Cb=0.21, Ct=0.25, Ca=0.48, Cr=0.04)

And the "CI" and "RSE" options to calculate custom confidence intervals::

    # Estimate the 90% CI using a custom RSE
    >>> V, Vmin, Vmax = g14.longterm(i60, Bt, T, A, R, CI=0.9, RSE=1.13)